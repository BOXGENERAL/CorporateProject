public class Debt {
  private double interest, amountInterest, debtAmount, debtMonthlyPay;
  private int payYear, payMonth;
  
  public Debt(double debt, double interest1, int year, int month) {
    interest = interest1;
    debtAmount = debt;
    payYear = year;
    amountInterest = this.setAmountInterest();
    debtMonthlyPay = this.calculateMonthlyPayment();
  }
  
  private double calculateCompoundInterest(double interest, int time)
      {
         if (time == 1)
		   {
			   return (1+interest);
		   }
		   else
		   {
			   return (1+interest) * calculateCompoundInterest (interest, time-1);
		   }
      }
      
      public double setAmountInterest()
      {
         amountInterest = debtAmount + this.calculateCompoundInterest(interest, this.calMonth());
			return amountInterest;
      }
      
      private int calMonth()
      {
         int currentyear = Corporate.getTodayYear();
   	   int currentmonth = Corporate.getTodayMonth();
   	   int totalmonth;
   	   int totalyear;
   	   currentyear = currentyear + 1;
   	   totalyear = payYear - currentyear;
   	   totalmonth = ((totalyear*12) + (13 - currentmonth) + payMonth);
         return totalmonth;
      }
   
       public double calculateMonthlyPayment()
      {
         int totalMonth = this.calMonth();
	      double monthlyPayment = Math.pow((debtAmount*(1+interest/totalMonth)), interest*totalMonth);
	      Department[0].addCategory("debt" + CashFlow.getNumDebt(), 0, monthlyPayment);
      }
      
      public double getDebtMonthlyPayment() {
      	return debtMonthlyPay;
      }
}
