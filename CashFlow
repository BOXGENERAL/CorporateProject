public class CashFlow 
   {
      private double profit, perdictingProfit, interest, cash, totalDebt, amountInterest;
      private Debt[];
      private int numDebt;
      private int debtPayYear;
      private int debtPayMonth;
      
       public CashFlow(double money)
       {
         cash = money;
         profit = 0;
	 Debt[] = new Debt[50];
         interest= 0;
         totalDebt = 0;
         amountInterest = 0;
         debtPayDate = 0;
	 numDebt = 0;
         predictingProfit = 0;
       }
       
       public void setProfit ()
      {
         profit = CashFlow.calculateProfit();
      }
   
       public double getProfit ()
      {
         return profit;
      }
      
      public double getCash() {
      	return cash;
      }
      
      public void changeCash() {
      	cash = cash + profit;
      }
      
      public boolean checkCash() {
      	if (cash + predicting * 3 <= 0)
		return false;
        else 
		return true;
      }
      
      public void setPredictingProfit()
      {
         predictingProfit = CashFlow.calculatePredictingProfit();
      }
      
      public double getPredictingProfit()
      {
         return predictingProfit;
      }
      
       public double calculateProfit()
      {
         return Revenue.getAmount() - Corperate.getTotalExp();
      }
   
      public double calcultePredictingProfit()
      {
         return Revenue.getAmount() - Corperate.getTotalBud();
      }
       
       private double calculateCompoundInterest(double interest, int time)
      {
         if (time == 1)
		   {
			   return (1+interest);
		   }
		   else
		   {
			   return (1+interest) * calculateCompoundInterest (interest, time-1);
		   }
      }
      
      public void setAmountInterest()
      {
         amountInterest = debt + CashFlow.calculateCompoundInterest(interest, this.calMonth());
      }
      
      private int calMonth()
      {
         int currentyear = Corperation.getTodayYear();
   	 int currentmonth = Corperation.getTodayMonth();
   	 int totalmonth;
   	 int totalyear;
   	 currentyear = currentyear + 1;
   	 totalyear = debtPayYear - currentyear;
   	 totalmonth = ((totalyear*12) + (13 - currentmonth) + debtPayMonth);
      }
   
       public double calculateMonthlyPayment()
      {
	double monthlyPayment = Math.pow((cash*(1+interest/MONTH)), interest*MONTH);
	Department[0].addCategory("debt" + numDebt, 0, monthlyPayment);
      }
   
       public String toString()
      {
         String c = "Cash amount: $" + cash + "\nProfit: $" + profit + "\nPrediting Profit: $" + predictingProfit + "\nDebt: $" + totalDebt";
	 return c;
      }
   }
